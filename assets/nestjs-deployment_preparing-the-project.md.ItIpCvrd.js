import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.nQaBHiNx.js";const g=JSON.parse('{"title":"Preparing the Project","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"nestjs-deployment/preparing-the-project.md","filePath":"nestjs-deployment/preparing-the-project.md"}'),n={name:"nestjs-deployment/preparing-the-project.md"},t=e(`<h1 id="preparing-the-project" tabindex="-1">Preparing the Project <a class="header-anchor" href="#preparing-the-project" aria-label="Permalink to &quot;Preparing the Project&quot;">​</a></h1><p>Before deploying to the server, you need to prepare your NestJS project to ensure it can run correctly in a production environment.</p><h2 id="environment-configuration" tabindex="-1">Environment Configuration <a class="header-anchor" href="#environment-configuration" aria-label="Permalink to &quot;Environment Configuration&quot;">​</a></h2><p>If you don&#39;t already use a .env file for your environment variables, it is time to create one. It should look something like this:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>PORT=3000</span></span>
<span class="line"><span>DATABASE_URL=...</span></span>
<span class="line"><span>API_KEY=...</span></span></code></pre></div><h3 id="env-production" tabindex="-1">.env.production <a class="header-anchor" href="#env-production" aria-label="Permalink to &quot;.env.production&quot;">​</a></h3><p>You can create a <code>.env.production</code> to cover different environment variables when deploying your application for production. Just create a file like <code>.env.\${Node environment mode}</code>. To use it inside your code, just do it like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// in AppModule (or ConfigModule import)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConfigModule.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isGlobal: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  envFilePath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`.env\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>With that setup, NestJS will be able to pick up the correct environment variable depending on your deployment mode.</p><h2 id="set-node-env-when-running-the-app" tabindex="-1">Set NODE_ENV When Running the App <a class="header-anchor" href="#set-node-env-when-running-the-app" aria-label="Permalink to &quot;Set NODE_ENV When Running the App&quot;">​</a></h2><p>To make the magic finally work, all you need to do is set the NODE_ENV mode when deploying.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">production</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist/main.js</span></span></code></pre></div><h2 id="fallback-or-shared-values" tabindex="-1">Fallback or shared values <a class="header-anchor" href="#fallback-or-shared-values" aria-label="Permalink to &quot;Fallback or shared values&quot;">​</a></h2><p>If you want to load both .env and .env.production with .env.production overriding shared values:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConfigModule.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isGlobal: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  envFilePath: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`.env.\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,15),p=[t];function h(l,r,o,k,d,c){return a(),i("div",null,p)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
