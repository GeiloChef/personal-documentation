import{_ as s,c as n,o as a,a4 as p}from"./chunks/framework.nQaBHiNx.js";const h=JSON.parse('{"title":"Add .gitignore to VitePress Project","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"vitepress/add-gitignore-file.md","filePath":"vitepress/add-gitignore-file.md"}'),e={name:"vitepress/add-gitignore-file.md"},l=p(`<h1 id="add-gitignore-to-vitepress-project" tabindex="-1">Add <code>.gitignore</code> to VitePress Project <a class="header-anchor" href="#add-gitignore-to-vitepress-project" aria-label="Permalink to &quot;Add \`.gitignore\` to VitePress Project&quot;">â€‹</a></h1><p>The following <code>.gitignore</code> is automatically generated and helps to easily exclude all unwanted files from your upcoming git commits.</p><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#.gitignore</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Created by .ignore support plugin (hsz.mobi)</span></span>
<span class="line"><span>### Node template</span></span>
<span class="line"><span># Logs</span></span>
<span class="line"><span>/logs</span></span>
<span class="line"><span>*.log</span></span>
<span class="line"><span>npm-debug.log*</span></span>
<span class="line"><span>yarn-debug.log*</span></span>
<span class="line"><span>yarn-error.log*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Runtime data</span></span>
<span class="line"><span>pids</span></span>
<span class="line"><span>*.pid</span></span>
<span class="line"><span>*.seed</span></span>
<span class="line"><span>*.pid.lock</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Directory for instrumented libs generated by jscoverage/JSCover</span></span>
<span class="line"><span>lib-cov</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Coverage directory used by tools like istanbul</span></span>
<span class="line"><span>coverage</span></span>
<span class="line"><span></span></span>
<span class="line"><span># nyc test coverage</span></span>
<span class="line"><span>.nyc_output</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)</span></span>
<span class="line"><span>.grunt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Bower dependency directory (https://bower.io/)</span></span>
<span class="line"><span>bower_components</span></span>
<span class="line"><span></span></span>
<span class="line"><span># node-waf configuration</span></span>
<span class="line"><span>.lock-wscript</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Compiled binary addons (https://nodejs.org/api/addons.html)</span></span>
<span class="line"><span>build/Release</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Dependency directories</span></span>
<span class="line"><span>node_modules/</span></span>
<span class="line"><span>jspm_packages/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># TypeScript v1 declaration files</span></span>
<span class="line"><span>typings/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional npm cache directory</span></span>
<span class="line"><span>.npm</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional eslint cache</span></span>
<span class="line"><span>.eslintcache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional REPL history</span></span>
<span class="line"><span>.node_repl_history</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Output of &#39;npm pack&#39;</span></span>
<span class="line"><span>*.tgz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Yarn Integrity file</span></span>
<span class="line"><span>.yarn-integrity</span></span>
<span class="line"><span></span></span>
<span class="line"><span># dotenv environment variables file</span></span>
<span class="line"><span>.env</span></span>
<span class="line"><span></span></span>
<span class="line"><span># parcel-bundler cache (https://parceljs.org/)</span></span>
<span class="line"><span>.cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># next.js build output</span></span>
<span class="line"><span>.next</span></span>
<span class="line"><span></span></span>
<span class="line"><span># nuxt.js build output</span></span>
<span class="line"><span>.nuxt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Nuxt generate</span></span>
<span class="line"><span>dist</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vuepress build output</span></span>
<span class="line"><span>docs/.vuepress/dist</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vitepress build output</span></span>
<span class="line"><span>docs/.vitepress/dist</span></span>
<span class="line"><span></span></span>
<span class="line"><span>docs/.vitepress/cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Serverless directories</span></span>
<span class="line"><span>.serverless</span></span>
<span class="line"><span></span></span>
<span class="line"><span># IDE / Editor</span></span>
<span class="line"><span>.idea</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Service worker</span></span>
<span class="line"><span>sw.*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># macOS</span></span>
<span class="line"><span>.DS_Store</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Vim swap files</span></span>
<span class="line"><span>*.swp</span></span>
<span class="line"><span></span></span>
<span class="line"><span>report.*.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.vscode</span></span></code></pre></div>`,3),i=[l];function c(t,o,r,d,g,u){return a(),n("div",null,i)}const _=s(e,[["render",c]]);export{h as __pageData,_ as default};
